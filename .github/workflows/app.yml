name: Test

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10

      - name: Install Dependencies
        run: |
          pip install poetry==1.5.1
          poetry --version
          poetry config virtualenvs.in-project true
          poetry install

      - name: Static Analysis
        run: poetry run make lint

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10']
      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          poetry install

      - name: PyTest with sharding
        run: |
          poetry run pytest tests --cov-report=xml

      - name: Upload coverage
        uses: codecov/codecov-action@v2